buildscript {
    ext.kotlin_version = '1.1.3-2'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url 'https://dl.bintray.com/kotlin/kotlin-eap'
        }

    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.9"
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'maven'
apply plugin: 'signing'

mainClassName = 'examples.QuoteParserExampleKt'

group = "com.github.ppzhuk"
archivesBaseName = "email-parser"
version = "1.0"

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: '1.1.0'
    compile 'javax.mail:mail:1.4.7'
    compile group: 'com.intellij', name: 'annotations', version: '12.0'

    testCompile 'junit:junit:4.12'
    testCompile 'org.jetbrains.spek:spek:0.1.195'
}

repositories {
    mavenCentral()
    maven {
        url "http://repository.jetbrains.com/simple/spek"
    }
}
sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}
task wrapper(type: Wrapper) {
    gradleVersion = "2.11"
}

run {
    standardInput = System.in

    if (project.hasProperty('emlFile')) {
        args emlFile.split('\n')
    }
}

task runProcessing(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'examples.QuoteParserExampleKt'

    if (project.hasProperty('emlFile')) {
        args emlFile.split('\n')
    }
}

dokka {
    outputDirectory = "$buildDir/dokka"
    includes = ['module.md']
    sourceDirs = files('src/main/kotlin/quoteParser')
    linkMapping {
        dir = "src/main/kotlin"
        url = "https://github.com/ppzhuk/email-parser/tree/master/src/main/kotlin"
        suffix = "#L"
    }
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
    includes = ['module.md']
    sourceDirs = files('src/main/kotlin/quoteParser')
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name "email-parser"
                packaging 'jar'
                artifactId 'email-parser'
                description "This library provides ability to separate the quotation from the useful content in email messages.\n" +
                        "The main purpose of this library is to process as much different quotation formats as possible.\n" +
                        "It is also independent from the language used in email."
                url 'https://github.com/ppzhuk/email-parser'

                scm {
                    connection 'scm:git:git://github.com/ppzhuk/email-parser.git'
                    developerConnection 'scm:git:ssh://github.com/ppzhuk/email-parser.git'
                    url 'http://github.com/ppzhuk/email-parser/tree/master'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'ppzhuk'
                        name 'Pavel Zhuk'
                        email 'ppzhuk@gmail.com'
                    }
                }
            }
        }
    }
}

